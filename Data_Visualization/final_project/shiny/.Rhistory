geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) + theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
RlogoSVGgrob <- gTree(children=gList(pictureGrob(Rlogo, ext="gridSVG")))
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=0, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) + theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-10, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) + theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) + theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
p<- ggplot(b) + annotation_custom(RlogoSVGgrob,xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +geom_point(aes(x=disp, y=mpg))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) + theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName),arrow = arrow(length = unit(0.03, "npc"))) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size(range(1,3))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size(range(1,3)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size(range(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size("line",range(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size("segment",range(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",limits=c(0,5)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",limits=c(0,1)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",limits=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg,
axis.line=element_blank()
) + xlab("") + ylab("")
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
gridExtra::grid.arrange(egg::set_panel_size(p=p, width=unit(650, "points"), height=unit(316.5, "points")))
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=S),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("segment",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.03, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
sf_data <- rush_data %>% filter(PossessionTeam=='SF' & Position=='RB') %>% filter(between(X1,0,120) & between(Y1,0,53.3)) %>%
filter(DisplayName=='Matt Breida')
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
sf_data <- rush_data %>% filter(PossessionTeam=='SF' & Position=='RB') %>% filter(between(X1,0,120) & between(Y1,0,53.3)) %>%
filter(DisplayName=='Raheem Mostert')
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
rush_data <- r_csv2("./rushers_lines.csv")
sf_data <- rush_data %>% filter(PossessionTeam=='SF' & Position=='RB') %>% filter(between(X1,0,120) & between(Y1,0,53.3)) ##%>%
filter(DisplayName=='Raheem Mostert')
sf_data <- rush_data %>% filter(PossessionTeam=='SF' & Position=='RB') %>% filter(between(X1,0,120) & between(Y1,0,53.3)) ##%>%
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=125, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=130, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-15, xmax=127, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-20, xmax=127, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-17, xmax=127, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
sf_data <- rush_data %>% filter(PossessionTeam=='LAC' & Position=='RB') %>% filter(between(X1,0,120) & between(Y1,0,53.3)) ##%>%
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-17, xmax=127, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
sf_data <- rush_data %>% filter(PossessionTeam=='LAC' & Position=='RB' & Season==2019) %>% filter(between(X1,0,120) & between(Y1,0,53.3)) ##%>%
p <- ggplot(sf_data,aes(x=X,y=Y,color=DisplayName)) + annotation_custom(RlogoSVGgrob,xmin=-17, xmax=127, ymin=-5, ymax=64) + geom_point(size=2,show.legend = FALSE) +
geom_segment(aes(x = X, y = Y, xend = X1, yend = Y1, colour = DisplayName,size=(S*60^2)/1760),arrow = arrow(length = unit(0.02, "npc"))) + scale_size_continuous("Speed",range=c(0,2)) + theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg,
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(), legend.position = "top"
) + xlab("") + ylab("")
p
shiny::runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
install.packages("shinydashboard")
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
team_stats <- rush_data %>% group_by(PossessionTeam,Season,Down) %>% summarise(mean(Yards))
View(team_stats)
team_stats <- rush_data %>% group_by(PossessionTeam,Season,Down) %>% summarise(avg_rush = mean(Yards),total_rush = n())
View(team_stats)
total_rush <- rush_data %>% group_by(PossessionTeam,Season) %>% summarise(avg_rush = mean(Yards),total_rush = n())
View(total_rush)
team_stats <- rush_data %>% filter(Position=='RB') %>% group_by(PossessionTeam,Season,Down) %>% summarise(avg_rush = mean(Yards),total_rush = n())
total_rush <- rush_data %>% filter(Position=='RB') %>% group_by(PossessionTeam,Season) %>% summarise(avg_rush = mean(Yards),total_rush = n())
View(total_rush)
install.packages("teamcolors")
nfl_teamcolors <- teamcolors %>% filter(league == "nfl")
require(teamcolors)
nfl_teamcolors <- teamcolors %>% filter(league == "nfl")
View(nfl_teamcolors)
View(team_stats)
View(rush_data)
View(total_rush)
nfl_teamcolors <- nfl_teamcolors[c(1:16,18,17,19:nrow(nfl_teamcolors)),]
View(nfl_teamcolors)
unique(rush_data$PossessionTeam)
order(unique(rush_data$PossessionTeam))
rush_data %>% arrange(distinct(PossessionTeam))
rush_data %>% select(PossessionTeam) %>% distinct()
rush_data %>% select(PossessionTeam) %>% distinct() %>% arrange()
rush_data %>% select(PossessionTeam) %>% distinct() %>% arrange(PossessionTeam)
teams <- rush_data %>% select(PossessionTeam) %>% distinct() %>% arrange(PossessionTeam)
teams <- cbind(teams,nfl_teamcolors)
View(teams)
total_rush <- rush_data %>% filter(Position=='RB') %>% group_by(PossessionTeam,Season) %>% summarise(avg_rush = mean(Yards),total_rush = n()) %>%
left_join(.,teams,by="PossessionTeam")
View(total_rush)
ggplot(total_rush,aes(x=PossessionTeam,y=sum(total_rush),fill=PossessionTeam)) + geom_bar() + scale_fill_manual(values = primary)
ggplot(total_rush,aes(x=PossessionTeam,y=sum(total_rush),fill=PossessionTeam)) + geom_bar() + scale_fill_manual(values = aes(primary))
ggplot(total_rush,aes(x=PossessionTeam,y=sum(total_rush),fill=PossessionTeam)) + geom_bar(stat = "identity") + scale_fill_manual(values = aes(primary))
ggplot(total_rush,aes(x=PossessionTeam,y=sum(total_rush),fill=PossessionTeam)) + geom_bar(stat = "identity") + scale_fill_manual(values = primary)
View(total_rush)
ggplot(total_rush,aes(x=PossessionTeam,y=sum(total_rush),fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
nfl_teamcolors <- teamcolors %>% filter(league == "nfl")
teams <- rush_data %>% select(PossessionTeam) %>% distinct() %>% arrange(PossessionTeam)
View(teams)
View(nfl_teamcolors)
nfl_teamcolors <- nfl_teamcolors[c(1:16,18,17,19:27,29,28,30:nrow(nfl_teamcolors)),]
teams <- cbind(teams,nfl_teamcolors)
total_rush <- rush_data %>% filter(Position=='RB') %>% group_by(PossessionTeam,Season) %>% summarise(avg_rush = mean(Yards),total_rush = n()) %>%
left_join(.,teams,by="PossessionTeam")
ggplot(total_rush,aes(x=PossessionTeam,y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
View(total_rush)
View(total_rush)
View(rush_data)
total_rush <- rush_data %>% filter(Position%in%c('RB','HB')) %>% group_by(PossessionTeam,Season) %>% summarise(avg_rush = mean(Yards),total_rush = n()) %>%
left_join(.,teams,by="PossessionTeam")
ggplot(total_rush,aes(x=PossessionTeam,y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
ggplot(total_rush,aes(x=Reorder(PossessionTeam,total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
ggplot(total_rush,aes(x=reorder(PossessionTeam,total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity()
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
geom_text(label=total_rush)
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
geom_text(aes(label=total_rush))
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
geom_text(aes(label=sum(total_rush)))
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"))
ggplot(total_rush,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + xlab("Team") + ylab("Rushes")
ggplot(team_stats,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + xlab("Team") + ylab("Rushes")
team_stats <- rush_data %>% filter(Position%in%c('RB','HB')) %>% group_by(PossessionTeam,Season,Down) %>% summarise(avg_rush = mean(Yards),total_rush = n()) %>%
left_join(.,teams,by="PossessionTeam")
ggplot(team_stats,aes(x=reorder(PossessionTeam,-total_rush),y=total_rush,fill=primary)) + geom_bar(stat = "identity") + scale_fill_identity() +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + xlab("Team") + ylab("Rushes")
teams %>% select(PossessionTeam) %>% pull()
nfl_runs <- r_csv2("./rushers_lines.csv")
teams <- nfl_runs %>% select(PossessionTeam) %>% unique()
View(teams)
teams <- nfl_runs %>% select(PossessionTeam) %>% unique() %>% arrange(PossessionTeam)
View(teams)
View(rush_data)
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
defenders_in_box <- range(1,11)
defenders_in_box <- c(1:11)
nfl_runs %>% ggplot(aes(DefendersInTheBox)) + geom_histogram()
View(team_stats)
View(nfl_teamcolors)
View(total_rush)
### NFL DATA ###
nfl_runs <- r_csv2("./rushers_lines.csv") # Read in Rushes CSV from Python Output
nfl_runs <- nfl_runs %>% filter(Position%in%c('RB','HB')) %>%
mutate(speed_mph = round((S*60^2)/1760,1),acc_mph = round((A*60^2)/1760,1))# only care about RB/HB, translate speed and acc to MPH
teams <- nfl_runs %>% select(PossessionTeam) %>% unique() %>% arrange(PossessionTeam) %>% pull() # Get team list, alpha sort
nfl_teamcolors <- teamcolors %>% filter(league == "nfl") # Get team colors package
nfl_teamcolors <- nfl_teamcolors[c(1:16,18,17,19:27,29,28,30:nrow(nfl_teamcolors)),] # Re-Order to match team list
# Combine teams and team colors
teams <- cbind(teams,nfl_teamcolors)
View(teams)
# VIEWS/FILTERS:
cuts <- c("Season","Down","Direction")
formations <- nfl_runs %>% select(OffenseFormation) %>% unique() %>% arrange(OffenseFormation) %>% pull()
defenders_in_box <- c(1:11)
metrics <- c("Acceleration","Speed","Yards")
calc <- c("Average","Max","Total")
require(stringr)
runApp('NFLRunsDSE')
View(rush_data)
### NFL DATA ###
nfl_runs <- r_csv2("./rushers_lines.csv") # Read in Rushes CSV from Python Output
nfl_runs <- nfl_runs %>% filter(Position%in%c('RB','HB')) %>%
mutate(speed_mph = round((S*60^2)/1760,1),acc_mph = round((A*60^2)/1760,1))# only care about RB/HB, translate speed and acc to MPH
teams <- nfl_runs %>% select(PossessionTeam) %>% unique() %>% arrange(PossessionTeam) %>% pull() # Get team list, alpha sort
nfl_teamcolors <- teamcolors %>% filter(league == "nfl") # Get team colors package
nfl_teamcolors <- nfl_teamcolors[c(1:16,18,17,19:27,29,28,30:nrow(nfl_teamcolors)),] # Re-Order to match team list
# Combine teams and team colors
teams <- cbind(teams,nfl_teamcolors)
View(teams)
# VIEWS/FILTERS:
cuts <- c("Season","Down","Direction")
formations <- nfl_runs %>% select(OffenseFormation) %>% unique() %>% arrange(OffenseFormation) %>% pull()
defenders_in_box <- c(1:11)
metrics <- c("Acceleration","Speed","Yards")
calc <- c("Average","Max","Total")
View(rush_data)
View(nfl_runs)
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
runApp('NFLRunsDSE')
dev.off()
