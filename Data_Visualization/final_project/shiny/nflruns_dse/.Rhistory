and t.view_month >= greatest(s.continuous_service_date,s.date_from) and s.date_to > t.view_month
where s.employee_status = 'Employee'
and (s.l2_org_name = 'Global Talent Organization' or s.l3_org_name = 'Global Compliance and Integrity')
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
group by 1,2,3,4,5) u
on b.workbook = u.workbook and b.month_start_date = u.view_month and b.l3_organization = u.l3_org_name and b.job_band = u.job_band and b.work_location_region = u.work_location_region
;")
dbSendUpdate(guardian,"GRANT SELECT ON public.tableau_metrics TO hrdwpubl")
dbSendUpdate(guardian,"GRANT SELECT ON public.tableau_metrics TO dberning")
# Drop Unnecessary Legal Records:
dbSendUpdate(guardian,
"DELETE from tableau_metrics
WHERE target_group != 'Legal'
and l3_organization = 'Global Compliance and Integrity'")
# Fix TA - non DIBs Dashboards
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'TA'
and dibs_tam = false
and (l3_organization != 'Talent Acquisition' or l3_organization is null);")
# Fix TA - DIBs Dashboards
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'TA'
and dibs_tam = true
and (l3_organization not in ('Talent Acquisition','Diversity, Inclusion & Belonging') or l3_organization is null);")
# Fix Comp Dashboard TAM:
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'Comp'
and (l3_organization != 'Compensation' or l3_organization is null);")
# Fix L&D Dashboard TAM:
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'L&D'
and (l3_organization != 'Learning & Talent Development' or l3_organization is null);")
# Fix People Analytics TAM:
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'PA'
and (l3_organization != 'People Analytics' or l3_organization is null);")
# Fix HRBP dashboards - non DIBs TAM:
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'HRBP'
and dibs_tam = false
and (l3_organization != 'HRBP Center of Excellence' or l3_organization is null);")
# Fix HRBP dashboards - DIBs TAM:
dbSendUpdate(guardian,
"UPDATE tableau_metrics
SET hc = 0
WHERE
target_group = 'HRBP'
and dibs_tam = true
and ((l3_organization != 'HRBP Center of Excellence' and l3_organization != 'Diversity, Inclusion & Belonging') or l3_organization is null);")
# Fix Eng TA TAM:
dbSendUpdate(guardian,
"create temporary table eng_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from gandalf.ta_roster r
join cubes.dim_employee_safe s
on r.employee_id = s.source_empnumber::text
where r.status = 'Active'
and s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and s.current_rec
and s.l3_org_name = 'Talent Acquisition'
and r.team IN ('ENG','OPS')
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'TA Eng') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where target_group = 'TA Eng'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from eng_tab;")
# Fix GSO TAM:
dbSendUpdate(guardian,
"create temporary table gso_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from gandalf.ta_roster r
join cubes.dim_employee_safe s
on r.employee_id = s.source_empnumber::text
where r.status = 'Active'
and s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and s.current_rec
and s.l3_org_name = 'Talent Acquisition'
and r.team IN ('GSO - NAMER','EMEA','APAC')
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'TA GSO') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'TA GSO'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from gso_tab;")
# Fix APAC TA TAM:
dbSendUpdate(guardian,
"create temporary table apac_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from gandalf.ta_roster r
join cubes.dim_employee_safe s
on r.employee_id = s.source_empnumber::text
where r.status = 'Active'
and s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and s.current_rec
and s.l3_org_name = 'Talent Acquisition'
and r.team IN ('APAC')
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'TA APAC') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'TA APAC'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from apac_tab;")
# Events TAM Fix
dbSendUpdate(guardian,
"create temporary table events_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from gandalf.ta_roster r
join cubes.dim_employee_safe s
on r.employee_id = s.source_empnumber::text
where r.status = 'Active'
and s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and s.current_rec
and s.l3_org_name = 'Talent Acquisition'
-- Manual Team Entry, potentially leverage Events Subteam:
and s.user_name IN ('adeleon','cpastuho','mching','ekrebs','jpins','jdempsey','dafu')
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'Events') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'Events'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from events_tab;")
# Compliance OFCCP TAM Fix
dbSendUpdate(guardian,
"create temporary table compliance_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from cubes.dim_employee_safe s
where s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
-- Manual Team Entry, take annique & susie
and s.manager_user_id IN ('arice','sfregoso')
and s.current_rec
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'Talent Services') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'Talent Services'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from compliance_tab;")
# Compliance Legal TAM Fix
dbSendUpdate(guardian,
"create temporary table compliance_lgl_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from cubes.dim_employee_safe s
where s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
-- Take L3 Org Name = Compliance
and s.l3_org_name = 'Global Compliance and Integrity'
and s.current_rec
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'Legal') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'Legal'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from compliance_lgl_tab;")
# Wellness TAM Fix
dbSendUpdate(guardian,
"drop table if exists wellness_tab;
create temporary table wellness_tab as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from cubes.dim_employee_safe s
where s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
-- Take L3 Org Name = Compliance
and (s.l4_org_owner_empnumber = 151683 or empnumber = 'WD151683')
and s.current_rec
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'Wellness') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'Wellness'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from wellness_tab;")
# HRBP and TA TAM Fix
dbSendUpdate(guardian,
"create temporary table ta_hrbp as
select b.workbook,b.target_group,b.dibs_tam,b.wb_value,b.wb_cost,b.month_start_date, b.l3_organization, b.job_band, b.work_location_region,
a.hc2, b.records from
(select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from gandalf.ta_roster r
join cubes.dim_employee_safe s
on r.employee_id = s.source_empnumber::text
where r.status = 'Active'
and s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and s.current_rec
and s.l3_org_name = 'Talent Acquisition'
-- Req-carrying and TAM
and r.function IN ('Sourcer','Manager','FER','BER','Recruiter','RA (non-BLP)')
group by 1,2,3
union all
select s.l3_org_name, s.job_band, s.work_location_region, count(distinct s.user_name) as hc2
from cubes.dim_employee_safe s
where s.employee_status = 'Employee'
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
-- Take L3 Org Name = HRBP
and s.l3_org_name = 'HRBP Center of Excellence'
and s.current_rec
group by 1,2,3) a
inner join
(select * from tableau_metrics
where target_group = 'TAHRBP') b
on a.l3_org_name = b.l3_organization and a.job_band = b.job_band and a.work_location_region = b.work_location_region
;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where
target_group = 'TAHRBP'
;")
dbSendUpdate(guardian,
"INSERT INTO tableau_metrics
select * from ta_hrbp;")
dbSendUpdate(guardian,
"delete from tableau_metrics
where hc = 0;")
# Disconnect
dbDisconnect(guardian)
# Base Talent Portal Metrics Table
guardian <- dbConnect(pgsql,"jdbc:postgresql://lva1-gendb01/guardian?ssl=true",sslfactory="org.postgresql.ssl.NonValidatingFactory", password=pass_1)
# Create base table with HC to be joined
dbSendUpdate(guardian,
"DROP TABLE IF EXISTS tp_base;
CREATE TABLE tp_base as
(select d.month_start_date, h.l2_organization, h.l3_organization, h.job_band, h.work_location_region, sum(h.head_count) as hc
from cubes.dashboards_hrbp h
join cubes.dim_date d
on d.date_key = h.date_key
where employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
and is_manager
and d.last_day_of_month_flag = 1
and d.month_start_date IN (select distinct cast(date_trunc('month', loggedin_date::date) as date) from feeds.unique_users_logged)
group by 1,2,3,4,5);")
# Metrics Table, joining actual usage
dbSendUpdate(guardian,
"DROP TABLE IF EXISTS tp_metrics;
create table tp_metrics as
select
'Talent Portal'::text as workbook,
'LinkedIn' as target_group,
false as dibs_tam,
b.*,
u.records
from tp_base b
left join(
select
cast(date_trunc('month', loggedin_date::date) as date) as view_month, s.l2_org_name, s.l3_org_name, s.job_band, s.work_location_region, count(distinct t.email) as records
from feeds.unique_users_logged t
join cubes.dim_employee_safe s on s.email_addr = t.email and t.loggedin_date::date between s.date_from::date and s.date_to::date
where
s.employee_status = 'Employee'
and s.is_manager
and s.employee_type IN ('Employee','Fixed Term Contract Employee (Fixed Term)')
group by 1,2,3,4,5
) u on b.month_start_date = u.view_month and b.l2_organization = u.l2_org_name and b.l3_organization = u.l3_org_name and b.job_band = u.job_band and b.work_location_region = u.work_location_region
;")
dbSendUpdate(guardian,"GRANT SELECT ON public.tp_metrics TO hrdwpubl")
dbSendUpdate(guardian,"GRANT SELECT ON public.tp_metrics TO dberning")
## Keep separate data source, do not run unless we append later
#dbSendUpdate(guardian,
#"INSERT INTO tableau_metrics
#select * from tp_metrics;")
#dbDisconnect(guardian)
# Expand Java Parameters
options(java.parameters = "-Xmx6000m")
# Package List
# Data Extraction
require(RPostgreSQL)
require(RJDBC)
require(XLConnect)
# Data Manipulation
require(dplyr)
require(tidyr)
require(lubridate)
require(stringr)
# Data Visualization
require(ggplot2)
# Send email based on completion
require(mailR)
# Data Manipulation
require(dplyr)
require(tidyr)
require(lubridate)
require(stringr)
# Data Visualization
require(ggplot2)
# Correlation at team level
cor(hiring_hist$offer_accepts,hiring_hist$hc)
# Establish Accepts Table
# Credentials
pass_1 <- "epWU32peDN"
pass_2 <- "Sagehenst!ver27"
pgsql <- JDBC("org.postgresql.Driver","/Users/kkannapp/Documents/postgresql-9.4.1211.jre6.jar", "`")
guardian <- dbConnect(pgsql,"jdbc:postgresql://lva1-gendb01/guardian?ssl=true",sslfactory="org.postgresql.ssl.NonValidatingFactory", password=pass_1)
dbSendUpdate(guardian,"create temporary table historical_accepts as
select ta_team_lead, date_trunc('month',start_date_offer_accepted)::date as hire_month, count(start_date_offer_accepted) as offer_accepts
from gandalf.rpt_application_aggregate_workflow w
where start_date_offer_accepted between current_date - interval '4 years' and current_date
and(start_date_rejected_or_withdrawn < start_date_offer_accepted or start_date_rejected_or_withdrawn is null)
and offer_rescinded_date is null
and ta_team_lead is not null
group by 1,2
order by 1, 2 desc;")
# Establish HC Table
dbSendUpdate(guardian,"create temporary table historical_ta_hc as
select a.ta_team_lead, a.hire_month, count(distinct a.recr_array) as hc
from
(select ta_team_lead, date_trunc('month',start_date_new)::date as hire_month, unnest(array_remove(ARRAY[frontend_recruiter,backend_recruiter,recruiter], NULL)) as recr_array
from gandalf.rpt_application_aggregate_workflow
where start_date_new between current_date - interval '4 years' and current_date
and ta_team_lead is not null) a
group by 1,2
order by 1,2 desc;")
hiring_hist <- dbGetQuery(guardian,"select a.ta_team_lead, a.hire_month, a.offer_accepts, b.hc
from historical_accepts a
join historical_ta_hc b
on a.ta_team_lead = b.ta_team_lead and a.hire_month = b.hire_month")
check_src <- dbGetQuery(guardian,"select d.month_start_date, sum(head_count) as hc_real
from cubes.dashboards_hrbp h join cubes.dim_date d on h.date_key = d.date_key
where l3_organization = 'Talent Acquisition'
and last_day_of_month_flag = 1
group by 1
order by 1 desc;")
dbDisconnect(guardian)
max_month <- max(hiring_hist$hire_month)
hiring_hist <- hiring_hist %>% filter(hire_month < max_month)
# Data Manipulation
require(dplyr)
require(tidyr)
require(lubridate)
require(stringr)
# Data Visualization
require(ggplot2)
# Correlation at team level
cor(hiring_hist$offer_accepts,hiring_hist$hc)
View(hiring_hist)
hiring_team <- hiring_hist %>% group_by(hire_month) %>% summarise(offer_accepts = sum(offer_accepts),hc = sum(hc))
# Correlation at total level:
cor(hiring_team$offer_accepts,hiring_team$hc)
View(hiring_team)
hiring_hist_graph <- hiring_hist %>% pivot_longer(-c(ta_team_lead,hire_month),"metric","value")
hiring_team_graph <- hiring_hist %>% pivot_longer(-c(ta_team_lead,hire_month),"metric","value") %>% group_by(hire_month,metric) %>% summarise(value = sum(value))
ggplot(hiring_hist_graph,aes(x=hire_month,y=value,color=metric,group=metric)) + geom_line(stat = 'identity') + facet_wrap(~ta_team_lead)
View(hiring_hist)
# Correlation at team level
cor(hiring_hist$offer_accepts,hiring_hist$hc)
View(hiring_team)
# Correlation at total level:
cor(hiring_team$offer_accepts,hiring_team$hc)
ggplot(hiring_team_graph,aes(x=hire_month,y=value,color=metric,group=metric)) + geom_line(stat = 'identity')
View(check_src)
check_map <- left_join(hiring_team,check_src,by=c("hire_month"="month_start_date"))
View(check_src)
View(hiring_hist)
# Correlation at team level
cor(hiring_hist$offer_accepts,hiring_hist$hc)
# Correlation at total level:
cor(hiring_team$offer_accepts,hiring_team$hc)
plot(check_map$hc_real,check_map$hc)
cor(check_map$offer_accepts,check_map$hc_real)
cor(check_map$hc,check_map$hc_real)
plot(check_map$offer_accepts,check_map$hc_real)
cor(check_map$offer_accepts,check_map$hc_real)
View(hiring_team_graph)
View(hiring_hist_graph)
hiring_hist_graph <- hiring_hist_graph %>% mutate(qu_month = quarter(hire_month))
View(hiring_hist_graph)
hiring_hist_graph <- hiring_hist_graph %>% mutate(qu_month = floor_date(hire_month,"quarter"))
hiring_hist_graph <- hiring_hist_graph %>% mutate(qu_month = floor_date(hire_month,"quarter"))
View(hiring_hist_graph)
hiring_hist_graph$hire_month <- as.Date(hiring_hist_graph$hire_month)
hiring_hist_graph <- hiring_hist_graph %>% mutate(qu_month = floor_date(hire_month,"quarter"))
hiring_hist_graph_q <- hiring_hist_graph %>% group_by(ta_team_lead,metric,qu_month) %>% summarise(value = sum(value))
View(hiring_hist_graph_q)
ggplot(hiring_hist_graph_q,aes(x=qu_month,y=value,color=metric,group=metric)) + geom_line(stat = 'identity') + facet_wrap(~ta_team_lead)
co2
View(co2)
CO2
View(CO2)
co2
time(co2)
co2
lh
library(shiny)
library(semantic.dashboard)
library(ggplot2)
library(plotly)
library(DT)
library(teamcolors)
library(dplyr)
library(tidyr)
require(grImport2)
require(grid)
require(grConvert)
require(gridSVG)
# Read CSV
r_csv2 <- function(X.file_path) {
read.csv(file = X.file_path,header = TRUE,sep = ",",stringsAsFactors = FALSE)
}
cuts <- c("Season","Down")
### NFL DATA ###
nfl_runs <- r_csv2("./rushers_lines.csv") # Read in Rushes CSV from Python Output
setwd("/Users/kkannapp/Documents/DSE/DSE241/final_project/shiny/nflruns_dse")
### NFL DATA ###
nfl_runs <- r_csv2("./rushers_lines.csv") # Read in Rushes CSV from Python Output
nfl_runs <- nfl_runs %>% filter(Position%in%c('RB','HB')) %>%
mutate(speed_mph = round((S*60^2)/1760,1),acc_mph = round((A*60^2)/1760,1))# only care about RB/HB, translate speed and acc to MPH
teams <- nfl_runs %>% select(PossessionTeam) %>% unique() %>% arrange(PossessionTeam) %>% pull() # Get team list, alpha sort
nfl_teamcolors <- teamcolors %>% filter(league == "nfl") # Get team colors package
nfl_teamcolors <- nfl_teamcolors[c(1:16,18,17,19:27,29,28,30:nrow(nfl_teamcolors)),] # Re-Order to match team list
# Combine teams and team colors
teams <- cbind(teams,nfl_teamcolors)
teams$teams <- as.character(teams$teams)
#Field:
Rlogo <- readPicture("./field-cairo.svg")
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='kkannappan', token='79ED198BA6CFD93F1ABE278E67DE1A3E', secret='j+5BQNGoRYrBbllwXkhmJBTqAVn8lUi97N0oMBB0')
library(rsconnect)
rsconnect::deployApp('/Users/kkannapp/Documents/DSE/DSE241/final_project/shiny/nflruns_dse/app.R')
rsconnect::deployApp('/Users/kkannapp/Documents/DSE/DSE241/final_project/shiny/nflruns_dse/')
runApp()
rsconnect::deployApp('/Users/kkannapp/Documents/DSE/DSE241/final_project/shiny/nflruns_dse/')
